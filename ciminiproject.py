# -*- coding: utf-8 -*-
"""CIMiniProject.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/147Mwpgng17gHVvRTXv2i_NUH1hXQ7F8d

#Install and Import Required Libraries
"""


# For later Firebase or email simulation
!pip install pyrebase4 --quiet
!pip install yagmail --quiet

# Import libraries
import cv2
import numpy as np
from PIL import Image
import streamlit as st
import tempfile

"""#Define the Low-Light Enhancement Function (Classical)"""

def enhance_low_light(image):
    # Convert to YUV color space
    img_yuv = cv2.cvtColor(image, cv2.COLOR_RGB2YUV)

    # Apply histogram equalization on the Y channel
    img_yuv[:, :, 0] = cv2.equalizeHist(img_yuv[:, :, 0])

    # Convert back to RGB
    enhanced_img = cv2.cvtColor(img_yuv, cv2.COLOR_YUV2RGB)
    return enhanced_img

"""#Streamlit UI for Upload/Capture and Enhancement"""

# Main Streamlit UI
st.title("üîí SmartSight - Low-Light Image Enhancement")
st.markdown("Upload or capture an image below:")

# Upload or capture
uploaded_file = st.file_uploader("Choose an image...", type=["jpg", "jpeg", "png"])
if uploaded_file is not None:
    image = Image.open(uploaded_file)
    image_np = np.array(image)

    st.image(image_np, caption="Original Image", use_column_width=True)

    # Enhance
    enhanced = enhance_low_light(image_np)
    st.image(enhanced, caption="Enhanced Image", use_column_width=True)

    # Simulated save & forward
    if st.button("üì§ Submit to Safety Server"):
        st.success("‚úÖ Submitted to Sector 17 Police Node!")

   # Save to global scope so Cell 4 can access it
        st.session_state["enhanced_image"] = enhanced

"""#Simulate Cloud Upload and Alert"""

import os
from datetime import datetime

def save_to_cloud_and_alert(enhanced_img, uploader_name="Guard_01", zone="Sector-17"):
    # Simulate saving to "cloud"
    timestamp = datetime.now().strftime("%Y%m%d_%H%M%S")
    filename = f"enhanced_{timestamp}.jpg"
    folder = "/content/SmartSight_Uploads"
    os.makedirs(folder, exist_ok=True)
    save_path = os.path.join(folder, filename)
    cv2.imwrite(save_path, enhanced_img)

    # Simulated log entry
    log_entry = {
        "filename": filename,
        "uploader": uploader_name,
        "zone": zone,
        "timestamp": timestamp,
        "status": "Sent to Station ‚Äì Zone 17"
    }

    return save_path, log_entry

# Integrate with Streamlit
if "enhanced_image" in st.session_state:
    enhanced_image = st.session_state["enhanced_image"]

    if st.button("üì§ Submit to Central Node"):
        save_path, log = save_to_cloud_and_alert(enhanced_image)
        st.success("‚úÖ Image successfully uploaded to cloud storage.")
        st.write("üìù Alert sent to: **Station 17 - Sector 4**")
        st.json(log)
else:
    st.warning("‚ö†Ô∏è No enhanced image found. Please upload and enhance an image first.")

"""#Upload Log + Public Gallery"""

# Cell 5: Upload Log and Public Threat Gallery
import pandas as pd
import streamlit as st

st.subheader("üìÑ Upload Log")
# Simulated log entries
log_data = {
    "Timestamp": ["2025-04-30 18:10", "2025-04-30 17:45", "2025-04-30 17:00"],
    "Uploaded By": ["Guard 1", "Volunteer A", "Booth Officer"],
    "Zone": ["Sector 4", "Block C", "Sector 7"],
    "Alert Sent To": ["Station 17", "Station 12", "Station 8"],
    "Image ID": ["img_01", "img_02", "img_03"]
}
log_df = pd.DataFrame(log_data)
st.dataframe(log_df)

st.subheader("üö® Public 'Most Wanted' Board (Demo)")
st.markdown("The following suspects were flagged during recent uploads:")

# Dummy suspect cards
cols = st.columns(3)
with cols[0]:
    st.image("https://placekitten.com/200/200", caption="Suspect A (Sector 4)")
with cols[1]:
    st.image("https://placekitten.com/201/200", caption="Suspect B (Block C)")
with cols[2]:
    st.image("https://placekitten.com/202/200", caption="Suspect C (Sector 7)")
